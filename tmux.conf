# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c '#{pane_current_path}'

bind ^s split-window -v -c "#{pane_current_path}"
bind ^v split-window -h -c "#{pane_current_path}"

# open panes in same path when using canonical tmux splits
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 10
bind -r > resize-pane -R 10
bind -r - resize-pane -D 10
bind -r + resize-pane -U 10

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# session management
bind C new-session
bind L choose-session

# vi-style controls for copy mode
setw -g mode-keys vi

# Set the prefix to ^A, like screen
unbind C-b
set -g prefix ^A
bind a send-prefix

# Start numbering windows at 1
set -g base-index 1

# toggle last window like screen
bind ^a last-window 

# set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION"

bind K confirm kill-server
bind X confirm kill-window

# longer scrollback
set -g history-limit 50000

# # left side of status bar holds "(>- session name -<)"
# set -g status-left-length 100
# set -g status-left-bg green
# set -g status-left-fg black
# set -g status-left-attr bold
# set -g status-left ''

# # right side of status bar holds "[host name] (date time)"
# set -g status-right-length 100
# set -g status-right-fg black
# set -g status-right-attr bold
# set -g status-right '#[fg=colour214,bg=colour235] #H#[fg=colour238]:#[fg=colour178]#S #[fg=colour039,bg=colour238] %y.%m.%d %H:%M '

# # make background window look like white tab
# set-window-option -g window-status-bg colour75
# set-window-option -g window-status-fg white
# set-window-option -g window-status-attr none

# # make foreground window look like bold yellow foreground tab
# set-window-option -g window-status-current-attr none
# set-window-option -g window-status-format           '#[fg=colour214,bg=colour235] #I #[fg=white,bg=colour236] #W #[default]'

# Renumber the windows
bind R move-window -r\; display-message "Windows Reordered..."

# run the script bash_colors.sh to view color options
# the window tab colors
set-window-option -g window-status-format           '#[fg=colour15,bg=colour16] #I. #W #[bg=colour251]'
set-window-option -g window-status-current-format   '#[fg=colour220,bg=colour16] #I. #W #[bg=colour251]'

# background and foreground of the status bar
set -g status-bg colour239
set -g status-fg colour249

# # # active terminal yellow border, non-active white
# set -g pane-border-bg default
# set -g pane-border-fg colour238
# set -g pane-active-border-bg default
# set -g pane-active-border-fg colour214

# set a 256color $TERM variable so programs inside tmux know they can use 256 colors
set -g default-terminal screen-256color

# renumber windows
set -g renumber-windows on

# reload tmux config file with C-a r
# bind r source ~/.tmux.conf\; display-message "tmux configuration reloaded..."
bind r command-prompt "rename-window '%%'"

# Create a new window and prompt for name
bind N command-prompt "new-window -n '%%' -c '#{pane_current_path}'"
bind c new-window -c '#{pane_current_path}'

# Rebind prefix to b
bind B set -g prefix ^b\; bind ^a last-window\; display-message "Prefix set to b"
# Rebind prefix to a
bind A set -g prefix ^a\; bind ^b last-window\; display-message "Prefix set to a"

# Works with ~/.ssh/rc to allow re-attaching to tmuxes after ssh reconnect
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

# Save tmux history - http://unix.stackexchange.com/questions/26548/write-all-tmux-scrollback-to-a-file
bind-key S command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32767 ; save-buffer %1 ; delete-buffer'

